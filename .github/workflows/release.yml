name: Compile Windows Binary

on:
  push:
    tags:
      - 'v*'
#    branches:
#      - '**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust and Windows target
        run: |
          rustup update
          rustup target add x86_64-pc-windows-gnu
          sudo apt-get update && sudo apt-get install -y unzip jq mingw-w64
          cargo fetch
          cargo clean

      - name: Extract binary name and version from Cargo.toml
        id: cargo-meta
        run: |
          NAME=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].name')
          VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Windows binary
        run: |
          cargo build --release --target x86_64-pc-windows-gnu

      - name: Prepare release artifact and checksum
        run: |
          NAME=${{ steps.cargo-meta.outputs.name }}
          VERSION=${{ steps.cargo-meta.outputs.version }}

          mkdir -p dist
          BIN=target/x86_64-pc-windows-gnu/release/${NAME}.exe
          cp "$BIN" dist/

          cd dist
          sha256sum "${NAME}.exe" > "${NAME}.sha256"
          zip "${NAME}-${VERSION}-windows-x86_64.zip" "${NAME}.exe" "${NAME}.sha256"

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
          token: ${{ secrets.GH_PAT }}
          name: Release ${{ steps.cargo-meta.outputs.version }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
